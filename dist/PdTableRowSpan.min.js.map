{"version":3,"file":"PdTableRowSpan.min.js","sources":["../src/PdTableRowSpan.js"],"sourcesContent":["/**\n * @Created by k186 on 2018/2/28.\n * @Name: pd-table-row-span\n * @GitHub: https://github.com/k186/pd-table-row-span\n * @Email: k1868548@gmail.com\n * @license: MIT\n */\nimport $ from 'jquery';\n\n$.fn.PdTableRowSpan = function (option) {\n  var args = Array.apply(null, arguments);\n  args.shift();\n  var internal_return;\n  this.each(function () {\n    var $this = $(this),\n      data = $this.data('pdtablerowspan'),\n      options = typeof option === 'object' && option;\n    if (!data) {\n      $this.data('pdtablerowspan', (data = new PdTableRowSpan(this, options)));\n    }\n    if (typeof option === 'string' && typeof data[option] === 'function') {\n      internal_return = data[option].apply(data, args);\n      if (internal_return !== undefined) {\n        return false;\n      }\n    }\n  });\n  if (internal_return !== undefined)\n    return internal_return;\n  else\n    return this;\n};\n\n\n/*\n  * @Class PdTableRowSpan\n  * @param {Object} context ,table dom 实例 只会对<tbody></tobdy> 内的内容进行合并\n  * */\nexport default class PdTableRowSpan {\n  constructor(context, opt) {\n    this.$context = $(context);\n    this.$options = {};\n    _fn.init(this, opt);\n  }\n\n  /*\n* @Method {Function}\n* */\n  merge() {\n    // var $rowData = $tbody.children().clone();\n    var that = this;\n    var $table = that.$context;\n    var $tbody = $table.find('tbody');\n    var $rowData = $tbody.children();\n    var mergeMap = {};\n    var from = that.$options.from != null ? that.$options.from : 0;\n    var to = that.$options.to;\n    var rowCount = $rowData.length;\n    var colCount = to != null ? to : $rowData.eq(0).find(that.$options.tags).length;\n    for (var c = from; c < colCount; c++) {\n      for (var r = 0; r < rowCount; r++) {\n        var colData = $rowData.eq(r).find(that.$options.tags).eq(c);\n        mergeMap[c] = mergeMap[c] ? mergeMap[c] : [];\n        mergeMap[c].push({\n          row: r,\n          col: c,\n          data: colData.html(),\n          isMerge: false,\n          rowSpan: 0,\n          mergeId: undefined\n        })\n      }\n    }\n    //开始合并\n    var mergeIdMap = [];\n    for (var k in mergeMap) {\n      var rowSpanData = mergeMap[k];\n\n      for (var i = 0; i < rowSpanData.length; i++) {\n        var currentData = rowSpanData[i].data;\n        var nextData = rowSpanData[i + 1] ? rowSpanData[i + 1].data : null;\n        if (currentData == nextData) {\n          //判断前一列有没有合并\n          var cl = from;\n          if (mergeMap[cl][i].mergeId != undefined && mergeMap[cl][i].mergeId != mergeMap[cl][i + 1].mergeId && mergeMap[cl][i + 1].mergeId != undefined) {\n            if (mergeMap[k][i].isMerge) {\n              $rowData.eq(i).find('td').eq(k).attr('data-row', mergeMap[k][i].mergeId);\n              mergeIdMap.push(mergeMap[k][i].mergeId);\n              $.unique(mergeIdMap);\n            }\n            continue\n          } else {\n            mergeMap[k][i].isMerge = true;\n            mergeMap[k][i + 1].isMerge = true;\n            if (mergeMap[k][i].mergeId != undefined) {\n              mergeMap[k][i].mergeId = mergeMap[k][i].mergeId;\n            } else {\n              mergeMap[k][i].mergeId = k + '-' + i;\n            }\n            mergeMap[k][i + 1].mergeId = mergeMap[k][i].mergeId;\n            mergeIdMap.push(mergeMap[k][i].mergeId);\n            $.unique(mergeIdMap);\n          }\n        }\n        if (mergeMap[k][i].isMerge) {\n          $rowData.eq(i).find('td').eq(k).attr('data-row', mergeMap[k][i].mergeId)\n        }\n      }\n    }\n    for (var index = 0; index < mergeIdMap.length; index++) {\n      var tds = $rowData.find('td[data-row=' + mergeIdMap[index] + ']');\n      tds.eq(0).attr('rowspan', tds.length);\n      tds.eq(0).css({\n        verticalAlign: that.$options.verticalAlign\n      });\n      tds.each(function (i) {\n        if (i != 0) {\n          this.remove()\n        }\n      });\n    }\n    return this.$context;\n  }\n\n  destroy() {\n    var that = this;\n    that.$context.find('tbody').children().remove();\n    var back = that.$tableBackup.find('tbody').children().clone();\n    that.$context.find('tbody').append(back);\n    that.$context.data('pdtablerowspan', null);\n    that.$options = {};\n    return this.$context;\n  }\n}\n\n\n/*\n* @Method private function\n* */\nlet _fn = {\n  /*\n  * @Method {Function} init ,init options\n  * */\n  init: function ($context, $options) {\n    let that = $context;\n    let $table = that.$context;\n    let $tbody = $table.find('tbody');\n    if ($tbody.children().length < 1) {\n      console.warn(PREFIX + '表格无数据');\n      return\n    }\n    //option 初始化\n    that.$options = $.extend(true, $.extend(true, {}, OPTIONS), $options);\n    //option 矫正\n    let backTable = $($table).clone();\n    _fn.regOptions($context, backTable);\n    //备份原始表格\n    if (!that.$tableBackup) {\n      that.$tableBackup = backTable;\n    }\n    //table merge\n    that.merge();\n  },\n  regOptions: function ($context, $table) {\n    //from 不能超过列数 最小1\n    //to 不能大于列数且要大于from\n    //verticalAlign ['top','middle','bottom']\n    let that = $context;\n    let from = that.$options.from;\n    let to = that.$options.to;\n    let verticalAlign = that.$options.verticalAlign;\n    let verticalAlignArr = ['top', 'middle', 'bottom'];\n    let colCount = $table.find('tbody').children().eq(0).find(that.$options.tags).length;\n    if (from) {\n      if (from >= 1 && from <= colCount + 1) {\n        that.$options.from -= 1;\n      } else {\n        that.$options.from = null;\n      }\n    }\n    if (to) {\n      if (to <= colCount && to >= from) {\n      } else {\n        that.$options.to = null;\n      }\n    }\n    if (verticalAlignArr.indexOf(verticalAlign) > -1) {\n    } else {\n      that.$options.verticalAlign = 'middle'\n    }\n\n  }\n\n};\nlet OPTIONS = {\n  tags: 'td',//包裹数据的类 防止 td 下有div 等标签包裹\n  verticalAlign: 'middle',\n  from: null,\n  to: null\n};\nlet PREFIX = 'PdTableRowSpan ERROR: ';\n\n"],"names":["$","fn","PdTableRowSpan","option","internal_return","args","Array","apply","arguments","shift","each","$this","this","data","options","undefined","context","opt","$context","$options","init","that","$rowData","find","children","mergeMap","from","to","rowCount","length","colCount","eq","tags","c","r","colData","push","html","mergeIdMap","k","rowSpanData","i","cl","mergeId","isMerge","attr","unique","index","tds","css","verticalAlign","remove","back","$tableBackup","clone","append","_fn","$table","warn","PREFIX","extend","OPTIONS","backTable","regOptions","merge","indexOf"],"mappings":"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"}